@model PagedList.IPagedList<PhanBaoAn.Context.product>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/admin/Views/Shared/AdminLayout.cshtml";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="text-primary">Product Management</h2>

        @using (Html.BeginForm("Index", "Product", FormMethod.Get, new { @class = "form-inline" }))
        {
            <div class="form-group mb-2">
                <label for="SearchString" class="sr-only">Search</label>
                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control mr-sm-2", placeholder = "Search by product name" })
            </div>
            <button type="submit" class="btn btn-primary mb-2">Search</button>
        }
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
    </div>

    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Image</th>
                <th>Category ID</th>
                <th>Type ID</th>
                <th>Brand ID</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.name)</td>
                    <td>@Html.DisplayFor(modelItem => item.price)</td>
                    <td>
                        @if (string.IsNullOrEmpty(item.image))
                        {
                            <img src="~/Content/images/default-placeholder.png" alt="No Image" style="max-width: 100px; max-height: 100px;" />
                        }
                        else
                        {
                            <img src="@Url.Content("~/Content/images/items/" + item.image)" alt="@item.name" style="max-width: 100px; max-height: 100px;" />
                        }
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.categoryId)</td>
                    <td>@Html.DisplayFor(modelItem => item.typeId)</td>
                    <td>@Html.DisplayFor(modelItem => item.brandId)</td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.id }, new { @class = "btn btn-warning btn-sm" }) |
                        @Html.ActionLink("Details", "Details", new { id = item.id }, new { @class = "btn btn-info btn-sm" }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.id }, new { @class = "btn btn-danger btn-sm" })
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <div class="d-flex justify-content-center mt-4">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @if (Model.PageCount > 1)
                {
                    if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = 1, searchString = ViewBag.CurrentFilter })" aria-label="First">
                                <span aria-hidden="true">&laquo;&laquo;</span>
                            </a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, searchString = ViewBag.CurrentFilter })" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                    }

                    for (int i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = i, searchString = ViewBag.CurrentFilter })">@i</a>
                        </li>
                    }

                    if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, searchString = ViewBag.CurrentFilter })" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount, searchString = ViewBag.CurrentFilter })" aria-label="Last">
                                <span aria-hidden="true">&raquo;&raquo;</span>
                            </a>
                        </li>
                    }
                }
            </ul>
        </nav>
    </div>
</div>
